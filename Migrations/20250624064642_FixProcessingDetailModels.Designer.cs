// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeafoodApp.Data;

#nullable disable

namespace SeafoodApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250624064642_FixProcessingDetailModels")]
    partial class FixProcessingDetailModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("SeafoodApp.Models.ColdInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LotCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantityIn")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityOut")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ColdInventories");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InputMaterial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputMaterial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Standard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProcessSteps");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationHours")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessStepId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProcessingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductionOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkerCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessStepId");

                    b.ToTable("ProcessingTickets");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicketInputDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessingTicketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessingTicketId");

                    b.ToTable("ProcessingTicketInputDetails");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicketOutputDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessingTicketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessingTicketId");

                    b.ToTable("ProcessingTicketOutputDetails");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProductionOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PackagingSupplyDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductionOrders");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProductionOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Packaging")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductionOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderId");

                    b.ToTable("ProductionOrderDetails");
                });

            modelBuilder.Entity("SeafoodApp.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SupplyDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("SeafoodApp.Models.PurchaseOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("SeafoodApp.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SeafoodApp.Models.WageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessStepName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WageRates");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicket", b =>
                {
                    b.HasOne("SeafoodApp.Models.ProcessStep", null)
                        .WithMany("ProcessingTickets")
                        .HasForeignKey("ProcessStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicketInputDetail", b =>
                {
                    b.HasOne("SeafoodApp.Models.ProcessingTicket", "ProcessingTicket")
                        .WithMany("InputDetails")
                        .HasForeignKey("ProcessingTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessingTicket");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicketOutputDetail", b =>
                {
                    b.HasOne("SeafoodApp.Models.ProcessingTicket", "ProcessingTicket")
                        .WithMany("OutputDetails")
                        .HasForeignKey("ProcessingTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessingTicket");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProductionOrderDetail", b =>
                {
                    b.HasOne("SeafoodApp.Models.ProductionOrder", "ProductionOrder")
                        .WithMany("Details")
                        .HasForeignKey("ProductionOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionOrder");
                });

            modelBuilder.Entity("SeafoodApp.Models.PurchaseOrder", b =>
                {
                    b.HasOne("SeafoodApp.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SeafoodApp.Models.PurchaseOrderDetail", b =>
                {
                    b.HasOne("SeafoodApp.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Details")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessStep", b =>
                {
                    b.Navigation("ProcessingTickets");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProcessingTicket", b =>
                {
                    b.Navigation("InputDetails");

                    b.Navigation("OutputDetails");
                });

            modelBuilder.Entity("SeafoodApp.Models.ProductionOrder", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("SeafoodApp.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("SeafoodApp.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
